1637580162775:(= + +)
1637580255622:(defn operation [arg] (if (= arg +) "+" "-"))
1637580261550:(operation +)
1637580267817:(operation -)
1637581465556:(subs "Hello" 3)
1637581522172:(subs "Hello" 4 5)
1637581532753:(subs "Hello" 3 5)
1637581541874:(subs "Hello" 3 6)
1637581547094:(subs "Hello" 3 4)
1637581554900:(subs "Hello" 3 5)
1637581618878:(subs "Hello" (- 3 (count "Hello")) (count "Hello"))
1637581630861:(count "Hello")
1637581649795:(subs "Hello" (- (count "Hello") 3) (count "Hello"))
1637581917630:(defn prepare-word\n  \n  \n  [input-word]  (subs input-word (-3 (count input-word)) (count input-word)))
1637581929335:(prepare-word "Hola")
1637582019248:(cljs.user/prepare-word "Hello")
1637582075427:(defn prepare-word\n  [input-word]\n  (subs input-word (- 3 (count input-word)) (count input-word)))
1637582080699:(cljs.user/prepare-word "Hello")
1637582221219:(defn prepare-word\n  [input-word]\n  (subs input-word (- (count input-word) 3) (count input-word)))
1637582225361:(cljs.user/prepare-word "Hello")
1637582387287:(subs "Hello" 3)
1637584201063:(subs "mapache" (- (count "Hello") 3) \n      (count "Hello"))
1637584223559:(subs "mapache" (- (count "Hello") 3) (count "Hello"))
1637584273891:(subs "mapache" (- (count "Hello") 3) (count "mapache"))
1637584287971:(subs "mapache" (- (count "mapache") 3) (count "mapache"))
1637584347987:(subs "mapache" (- (count "mapache") 3))
1637584373642:(subs "mapache" 3)
1637584415752:(subs "mapache" (- (count "mapache") 3) (count "mapache"))
1637584450720:(subs "mapache" 0 (- (count "mapache") 3))
1637586211396:(rand-int 1)
1637586219496:(rand-int 0)
1637586232227:(rand-int 2)
1637586440441:(subs nil (- (count nil) 3) (count nil))
1637590603548:(conj "a" "b")
1637590618511:(conj \\a \\b)
1637590651974:(clojure.string/join "a" "b")
1637590706210:(str "A" "b")
1637593121684:(get [1 2] 0)
1637593124881:(get [1 2] 1)
1637593127452:(get [1 2] 3)
